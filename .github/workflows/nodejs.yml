name: NodeJS Testing

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"
  release:
    types: [published]

jobs:
  node_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Node.JS 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install Node Dependencies
        run: npm install
        env:
          CI: TRUE
      - name: Save Code Linting Report JSON
        # npm script for ESLint
        # eslint --output-file eslint_report.json --format json src
        # See https://eslint.org/docs/user-guide/command-line-interface#options
        run: npm run lint:report
        continue-on-error: true
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@1.0.4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint_report.json"
      - name: Upload ESLint report
        uses: actions/upload-artifact@v1
        with:
          name: eslint_report.json
          path: eslint_report.json
      - name: Test That The Project Builds
        run: npm run build
      - name: Post a message to Slack on master or a PR
        if: github.event_name != 'release'
        uses: ataylorme/slack-post-message-action@master
        with:
          token: "${{ secrets.SLACK_TOKEN }}"
          channel: "#github-action-test"
          message: "Hello from ${{ github.ref }} of ${{ github.repository }}"
      - name: Post a message to Slack on release
        if: github.event_name == 'release'
        uses: ataylorme/slack-post-message-action@master
        with:
          token: "${{ secrets.SLACK_TOKEN }}"
          channel: "#github-action-test"
          message: "Hello from ${{ github.ref }} of ${{ github.repository }}"
          block-json: |
            [
              {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "A new release `${{ github.ref }}` for `${{ github.repository }}` was published by ${{ github.actor }}!"
                  },
                  "accessory": {
                      "type": "button",
                      "text": {
                          "type": "plain_text",
                          "text": "View on GitHub"
                      },
                      "url": "https://github.com/${{ github.repository }}/releases/tag/${{ github.ref }}"
                  }
              }
            ]
